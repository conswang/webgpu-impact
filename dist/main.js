(()=>{"use strict";const t="struct TransformData {\r\n    model: mat4x4<f32>,\r\n    view: mat4x4<f32>,\r\n    projection: mat4x4<f32>\r\n};\r\n\r\n@binding(0) @group(0) var<uniform> transform: TransformData;\r\n\r\nstruct Fragment {\r\n    @builtin(position) Position : vec4<f32>,\r\n    @location(0) Color : vec4<f32>\r\n};\r\n\r\n@vertex\r\nfn vs_main(@location(0) pos: vec3<f32>, @location(1) col: vec3<f32>) -> Fragment {\r\n    var output : Fragment;\r\n    output.Position = transform.projection * transform.view * transform.model * vec4<f32>(pos, 1.0);\r\n    output.Color = vec4<f32>(col, 1.0);\r\n    return output;\r\n}\r\n\r\n@fragment\r\nfn fs_main(@location(0) Color: vec4<f32>) -> @location(0) vec4<f32> {\r\n    return Color;\r\n}";class e{constructor(t){this.vertCount=0,this.idxCount=0,this.positions=new Array,this.colors=new Array,this.faces=new Array,this.createCube(),this.populateVBO();const e=GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST,s={size:this.vertDataVBO.byteLength,usage:e,mappedAtCreation:!0};this.buffer=t.createBuffer(s),new Float32Array(this.buffer.getMappedRange()).set(this.vertDataVBO),this.buffer.unmap(),this.bufferLayout={arrayStride:24,attributes:[{shaderLocation:0,format:"float32x3",offset:0},{shaderLocation:1,format:"float32x3",offset:12}]}}addVertex(t){console.log("adding vertex"),console.log(t.pos),console.log(t.col),this.positions.push(t.pos),this.colors.push(t.col),this.vertCount++}addFace(t,e){let i=new Array;for(let e=0;e<t.length;e++)i.push(this.vertCount),this.addVertex(t[e]);e?this.faces.push(new s(i,e)):this.faces.push(new s(i))}populateVBO(){var t=new Array;for(let e=0;e<this.faces.length;e++){const s=this.faces[e];for(let e=0;e<s.vertCount-2;e++)t.push(this.positions[s.verts[0]][0]),t.push(this.positions[s.verts[0]][1]),t.push(this.positions[s.verts[0]][2]),t.push(s.color[0]),t.push(s.color[1]),t.push(s.color[2]),t.push(this.positions[s.verts[e+1]][0]),t.push(this.positions[s.verts[e+1]][1]),t.push(this.positions[s.verts[e+1]][2]),t.push(s.color[0]),t.push(s.color[1]),t.push(s.color[2]),t.push(this.positions[s.verts[e+2]][0]),t.push(this.positions[s.verts[e+2]][1]),t.push(this.positions[s.verts[e+2]][2]),t.push(s.color[0]),t.push(s.color[1]),t.push(s.color[2]),this.idxCount+=3,console.log("Adding Triangle"),console.log([0,e+1,e+2]),console.log([s.verts[0],s.verts[e+1],s.verts[e+2]])}this.vertDataVBO=new Float32Array(t),console.log(this.vertCount),console.log(this.idxCount)}createCube(){let t=new Array;t.push({pos:[-1,-1,-1],col:[0,1,0]}),t.push({pos:[1,-1,-1],col:[1,0,0]}),t.push({pos:[1,1,-1],col:[0,0,1]}),t.push({pos:[-1,1,-1],col:[0,1,1]});let e=new Array;e.push({pos:[-1,-1,1],col:[0,1,0]}),e.push({pos:[1,-1,1],col:[1,0,0]}),e.push({pos:[1,1,1],col:[0,0,1]}),e.push({pos:[-1,1,1],col:[0,1,1]});let s=new Array;s.push({pos:[-1,-1,-1],col:[0,1,0]}),s.push({pos:[1,-1,-1],col:[1,0,0]}),s.push({pos:[1,-1,1],col:[0,0,1]}),s.push({pos:[-1,-1,1],col:[0,1,1]});let i=new Array;i.push({pos:[-1,1,-1],col:[0,1,0]}),i.push({pos:[1,1,-1],col:[1,0,0]}),i.push({pos:[1,1,1],col:[0,0,1]}),i.push({pos:[-1,1,1],col:[0,1,1]});let r=new Array;r.push({pos:[-1,-1,-1],col:[0,1,0]}),r.push({pos:[-1,1,-1],col:[1,0,0]}),r.push({pos:[-1,1,1],col:[0,0,1]}),r.push({pos:[-1,-1,1],col:[0,1,1]});let o=new Array;o.push({pos:[1,-1,-1],col:[0,1,0]}),o.push({pos:[1,1,-1],col:[1,0,0]}),o.push({pos:[1,1,1],col:[0,0,1]}),o.push({pos:[1,-1,1],col:[0,1,1]}),this.addFace(t,[1,0,0]),this.addFace(e,[0,1,0]),this.addFace(s,[0,0,1]),this.addFace(i,[1,0,1]),this.addFace(r,[1,1,0]),this.addFace(o,[0,1,1])}}class s{constructor(t,e){this.vertCount=0,this.verts=new Array;for(let e=0;e<t.length;e++)this.verts.push(t[e]);e&&(this.color=e),this.vertCount=t.length}addVertex(t){this.verts.push(t),this.vertCount++}}var i,r=1e-6,o="undefined"!=typeof Float32Array?Float32Array:Array;function n(){var t=new o(3);return o!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0),t}function a(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t}function h(t,e){var s=e[0],i=e[1],r=e[2],o=s*s+i*i+r*r;return o>0&&(o=1/Math.sqrt(o)),t[0]=e[0]*o,t[1]=e[1]*o,t[2]=e[2]*o,t}function u(){var t=new o(16);return o!=Float32Array&&(t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0),t[0]=1,t[5]=1,t[10]=1,t[15]=1,t}Math.random,Math.PI,Math.hypot||(Math.hypot=function(){for(var t=0,e=arguments.length;e--;)t+=arguments[e]*arguments[e];return Math.sqrt(t)}),n(),i=new o(2),o!=Float32Array&&(i[0]=0,i[1]=0);class c{constructor(t,e,s,i,r,u,c,p){var l,f,d;this.eye=n(),this.ref=n(),this.up=n(),this.right=n(),this.look=n(),this.fovy=t,this.aspect=(l=e,f=s,(d=new o(2))[0]=l,d[1]=f,d),this.nearClip=i,this.farClip=r,a(this.eye,u),a(this.ref,c),a(this.up,p),h(this.up,this.up),function(t,e,s){t[0]=e[0]-s[0],t[1]=e[1]-s[1],t[2]=e[2]-s[2]}(this.look,c,u),h(this.look,this.look),function(t,e,s){var i=e[0],r=e[1],o=e[2],n=s[0],a=s[1],h=s[2];t[0]=r*h-o*a,t[1]=o*n-i*h,t[2]=i*a-r*n}(this.right,this.look,p),h(this.right,this.right)}project(){var t=u();return function(t,e,s,i,r){var o,n=1/Math.tan(e/2);t[0]=n/s,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=n,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=-1,t[12]=0,t[13]=0,t[15]=0,null!=r&&r!==1/0?(o=1/(i-r),t[10]=(r+i)*o,t[14]=2*r*i*o):(t[10]=-1,t[14]=-2*i)}(t,this.fovy,this.aspect[0]/this.aspect[1],this.nearClip,this.farClip),t}view(){var t=u();return function(t,e,s,i){var o,n,a,h,u,c,p,l,f,d,v=e[0],m=e[1],g=e[2],y=i[0],w=i[1],C=i[2],b=s[0],A=s[1],x=s[2];Math.abs(v-b)<r&&Math.abs(m-A)<r&&Math.abs(g-x)<r?function(t){t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1}(t):(p=v-b,l=m-A,f=g-x,o=w*(f*=d=1/Math.hypot(p,l,f))-C*(l*=d),n=C*(p*=d)-y*f,a=y*l-w*p,(d=Math.hypot(o,n,a))?(o*=d=1/d,n*=d,a*=d):(o=0,n=0,a=0),h=l*a-f*n,u=f*o-p*a,c=p*n-l*o,(d=Math.hypot(h,u,c))?(h*=d=1/d,u*=d,c*=d):(h=0,u=0,c=0),t[0]=o,t[1]=h,t[2]=p,t[3]=0,t[4]=n,t[5]=u,t[6]=l,t[7]=0,t[8]=a,t[9]=c,t[10]=f,t[11]=0,t[12]=-(o*v+n*m+a*g),t[13]=-(h*v+u*m+c*g),t[14]=-(p*v+l*m+f*g),t[15]=1)}(t,this.eye,this.ref,this.up),t}model(t){var e=u();return function(t,e,s,i){var o,n,a,h,u,c,p,l,f,d,v,m,g,y,w,C,b,A,x,B,M,P,F,V,T=i[0],G=i[1],O=i[2],S=Math.hypot(T,G,O);S<r||(T*=S=1/S,G*=S,O*=S,o=Math.sin(s),a=1-(n=Math.cos(s)),h=e[0],u=e[1],c=e[2],p=e[3],l=e[4],f=e[5],d=e[6],v=e[7],m=e[8],g=e[9],y=e[10],w=e[11],C=T*T*a+n,b=G*T*a+O*o,A=O*T*a-G*o,x=T*G*a-O*o,B=G*G*a+n,M=O*G*a+T*o,P=T*O*a+G*o,F=G*O*a-T*o,V=O*O*a+n,t[0]=h*C+l*b+m*A,t[1]=u*C+f*b+g*A,t[2]=c*C+d*b+y*A,t[3]=p*C+v*b+w*A,t[4]=h*x+l*B+m*M,t[5]=u*x+f*B+g*M,t[6]=c*x+d*B+y*M,t[7]=p*x+v*B+w*M,t[8]=h*P+l*F+m*V,t[9]=u*P+f*F+g*V,t[10]=c*P+d*F+y*V,t[11]=p*P+v*F+w*V,e!==t&&(t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]))}(e,e,t,[0,0,1]),e}}var p=function(t,e,s,i){return new(s||(s=Promise))((function(r,o){function n(t){try{h(i.next(t))}catch(t){o(t)}}function a(t){try{h(i.throw(t))}catch(t){o(t)}}function h(t){var e;t.done?r(t.value):(e=t.value,e instanceof s?e:new s((function(t){t(e)}))).then(n,a)}h((i=i.apply(t,e||[])).next())}))};const l=document.getElementById("gfx-main"),f=new class{constructor(t){this.time=0,this.timeStep=.01,this.render=()=>{this.device.queue.writeBuffer(this.uniformBuffer,0,this.camera.model(this.time)),this.device.queue.writeBuffer(this.uniformBuffer,64,this.camera.view()),this.device.queue.writeBuffer(this.uniformBuffer,128,this.camera.project());const t=this.device.createTexture({size:[this.canvas.clientWidth,this.canvas.clientHeight],format:"depth24plus",usage:GPUTextureUsage.RENDER_ATTACHMENT}),e=this.device.createCommandEncoder(),s=this.context.getCurrentTexture().createView(),i=e.beginRenderPass({colorAttachments:[{view:s,clearValue:{r:.5,g:0,b:.25,a:1},loadOp:"clear",storeOp:"store"}],depthStencilAttachment:{view:t.createView(),depthClearValue:1,depthLoadOp:"clear",depthStoreOp:"store"}});i.setPipeline(this.pipeline),i.setBindGroup(0,this.bindGroup),i.setVertexBuffer(0,this.mesh.buffer),i.draw(this.mesh.idxCount,1,0,0),i.end(),this.device.queue.submit([e.finish()]),requestAnimationFrame(this.render),this.time+=this.timeStep},this.canvas=t,this.camera=new c(Math.PI/4,t.width,t.height,.1,10,[-5,0,2],[0,0,0],[0,0,1])}initialize(){return p(this,void 0,void 0,(function*(){yield this.setupDevice(),this.createAssets(),yield this.makePipeline(),this.render()}))}setupDevice(){var t,e;return p(this,void 0,void 0,(function*(){this.adapter=yield null===(t=navigator.gpu)||void 0===t?void 0:t.requestAdapter(),this.device=yield null===(e=this.adapter)||void 0===e?void 0:e.requestDevice(),this.context=this.canvas.getContext("webgpu"),this.format="bgra8unorm",this.context.configure({device:this.device,format:this.format,alphaMode:"opaque"})}))}makePipeline(){return p(this,void 0,void 0,(function*(){this.uniformBuffer=this.device.createBuffer({size:192,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});const e=this.device.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.VERTEX,buffer:{}}]});this.bindGroup=this.device.createBindGroup({layout:e,entries:[{binding:0,resource:{buffer:this.uniformBuffer}}]});const s=this.device.createPipelineLayout({bindGroupLayouts:[e]});this.pipeline=this.device.createRenderPipeline({layout:s,vertex:{module:this.device.createShaderModule({code:t}),entryPoint:"vs_main",buffers:[this.mesh.bufferLayout]},fragment:{module:this.device.createShaderModule({code:t}),entryPoint:"fs_main",targets:[{format:this.format}]},primitive:{topology:"triangle-list"},depthStencil:{depthWriteEnabled:!0,depthCompare:"less",format:"depth24plus"}})}))}createAssets(){this.mesh=new e(this.device)}}(l);f.initialize()})();