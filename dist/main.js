(()=>{"use strict";const t="struct TransformData {\r\n    model: mat4x4<f32>,\r\n    view: mat4x4<f32>,\r\n    projection: mat4x4<f32>\r\n};\r\n\r\n@binding(0) @group(0) var<uniform> transform: TransformData;\r\n\r\nstruct Fragment {\r\n    @builtin(position) Position : vec4<f32>,\r\n    @location(0) Color : vec4<f32>\r\n};\r\n\r\n@vertex\r\nfn vs_main(@location(0) pos: vec3<f32>, @location(1) col: vec3<f32>) -> Fragment {\r\n    var output : Fragment;\r\n    output.Position = transform.projection * transform.view * transform.model * vec4<f32>(pos, 1.0);\r\n    output.Color = vec4<f32>(col, 1.0);\r\n    return output;\r\n}\r\n\r\n@fragment\r\nfn fs_main(@location(0) Color: vec4<f32>) -> @location(0) vec4<f32> {\r\n    return Color;\r\n}";class e{constructor(t){this.vertCount=0,this.idxCount=0,this.positions=new Array,this.colors=new Array,this.faces=new Array;let e=new Array;e.push({pos:[0,-.5,-.5],col:[0,1,0]}),e.push({pos:[0,0,.5],col:[1,0,0]}),e.push({pos:[0,.5,-.5],col:[0,0,1]}),e.push({pos:[0,.25,-1],col:[0,1,1]}),e.push({pos:[0,-.25,-1],col:[1,1,0]}),this.addFace(e),this.populateVBO();const i=GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST,r={size:this.vertDataVBO.byteLength,usage:i,mappedAtCreation:!0};this.buffer=t.createBuffer(r),new Float32Array(this.buffer.getMappedRange()).set(this.vertDataVBO),this.buffer.unmap();const s=GPUBufferUsage.INDEX|GPUBufferUsage.COPY_DST,o={size:this.idxDataVBO.byteLength,usage:s,mappedAtCreation:!0};this.idxBuffer=t.createBuffer(o),new Uint32Array(this.idxBuffer.getMappedRange()).set(this.idxDataVBO),this.idxBuffer.unmap(),this.bufferLayout={arrayStride:24,attributes:[{shaderLocation:0,format:"float32x3",offset:0},{shaderLocation:1,format:"float32x3",offset:12}]}}addVertex(t){console.log("adding vertex"),console.log(t.pos),console.log(t.col),this.positions.push(t.pos),this.colors.push(t.col),this.vertCount++}addFace(t,e){let r=new Array;for(let e=0;e<t.length;e++)r.push(this.vertCount),this.addVertex(t[e]);e?this.faces.push(new i(r,e)):this.faces.push(new i(r))}populateVBO(){for(var t=new Array,e=new Array,i=0;i<this.vertCount;i++)t.push(this.positions[i][0]),t.push(this.positions[i][1]),t.push(this.positions[i][2]),t.push(this.colors[i][0]),t.push(this.colors[i][1]),t.push(this.colors[i][2]);for(let t=0;t<this.faces.length;t++){const i=this.faces[t];for(let t=0;t<i.vertCount-2;t++)e.push(0),e.push(t+1),e.push(t+2),console.log("Adding Triangle"),console.log([0,t+1,t+2]),console.log([i.verts[0],i.verts[t+1],i.verts[t+2]])}this.vertDataVBO=new Float32Array(t),this.idxDataVBO=new Uint32Array(e),this.idxCount=e.length}}class i{constructor(t,e){this.vertCount=0,this.verts=new Array;for(let e=0;e<t.length;e++)this.verts.push(t[e]);e&&(this.color=e),this.vertCount=t.length}addVertex(t){this.verts.push(t),this.vertCount++}}var r,s=1e-6,o="undefined"!=typeof Float32Array?Float32Array:Array;function n(){var t=new o(3);return o!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0),t}function a(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t}function h(t,e){var i=e[0],r=e[1],s=e[2],o=i*i+r*r+s*s;return o>0&&(o=1/Math.sqrt(o)),t[0]=e[0]*o,t[1]=e[1]*o,t[2]=e[2]*o,t}function u(){var t=new o(16);return o!=Float32Array&&(t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0),t[0]=1,t[5]=1,t[10]=1,t[15]=1,t}Math.random,Math.PI,Math.hypot||(Math.hypot=function(){for(var t=0,e=arguments.length;e--;)t+=arguments[e]*arguments[e];return Math.sqrt(t)}),n(),r=new o(2),o!=Float32Array&&(r[0]=0,r[1]=0);class c{constructor(t,e,i,r,s,u,c,f){var l,p,d;this.eye=n(),this.ref=n(),this.up=n(),this.right=n(),this.look=n(),this.fovy=t,this.aspect=(l=e,p=i,(d=new o(2))[0]=l,d[1]=p,d),this.nearClip=r,this.farClip=s,a(this.eye,u),a(this.ref,c),a(this.up,f),function(t,e,i){t[0]=e[0]-i[0],t[1]=e[1]-i[1],t[2]=e[2]-i[2]}(this.look,c,u),h(this.look,this.look),function(t,e,i){var r=e[0],s=e[1],o=e[2],n=i[0],a=i[1],h=i[2];t[0]=s*h-o*a,t[1]=o*n-r*h,t[2]=r*a-s*n}(this.right,this.look,f),h(this.right,this.right)}project(){var t=u();return function(t,e,i,r,s){var o,n=1/Math.tan(e/2);t[0]=n/i,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=n,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=-1,t[12]=0,t[13]=0,t[15]=0,null!=s&&s!==1/0?(o=1/(r-s),t[10]=(s+r)*o,t[14]=2*s*r*o):(t[10]=-1,t[14]=-2*r)}(t,this.fovy,this.aspect[0]/this.aspect[1],this.nearClip,this.farClip),t}view(){var t=u();return function(t,e,i,r){var o,n,a,h,u,c,f,l,p,d,v=e[0],m=e[1],g=e[2],y=r[0],w=r[1],B=r[2],x=i[0],b=i[1],C=i[2];Math.abs(v-x)<s&&Math.abs(m-b)<s&&Math.abs(g-C)<s?function(t){t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1}(t):(f=v-x,l=m-b,p=g-C,o=w*(p*=d=1/Math.hypot(f,l,p))-B*(l*=d),n=B*(f*=d)-y*p,a=y*l-w*f,(d=Math.hypot(o,n,a))?(o*=d=1/d,n*=d,a*=d):(o=0,n=0,a=0),h=l*a-p*n,u=p*o-f*a,c=f*n-l*o,(d=Math.hypot(h,u,c))?(h*=d=1/d,u*=d,c*=d):(h=0,u=0,c=0),t[0]=o,t[1]=h,t[2]=f,t[3]=0,t[4]=n,t[5]=u,t[6]=l,t[7]=0,t[8]=a,t[9]=c,t[10]=p,t[11]=0,t[12]=-(o*v+n*m+a*g),t[13]=-(h*v+u*m+c*g),t[14]=-(f*v+l*m+p*g),t[15]=1)}(t,this.eye,this.ref,this.up),t}model(){var t=u();return function(t,e,i,r){var o,n,a,h,u,c,f,l,p,d,v,m,g,y,w,B,x,b,C,A,M,P,U,V,D=r[0],F=r[1],O=r[2],G=Math.hypot(D,F,O);G<s||(D*=G=1/G,F*=G,O*=G,o=Math.sin(0),a=1-(n=Math.cos(0)),h=e[0],u=e[1],c=e[2],f=e[3],l=e[4],p=e[5],d=e[6],v=e[7],m=e[8],g=e[9],y=e[10],w=e[11],B=D*D*a+n,x=F*D*a+O*o,b=O*D*a-F*o,C=D*F*a-O*o,A=F*F*a+n,M=O*F*a+D*o,P=D*O*a+F*o,U=F*O*a-D*o,V=O*O*a+n,t[0]=h*B+l*x+m*b,t[1]=u*B+p*x+g*b,t[2]=c*B+d*x+y*b,t[3]=f*B+v*x+w*b,t[4]=h*C+l*A+m*M,t[5]=u*C+p*A+g*M,t[6]=c*C+d*A+y*M,t[7]=f*C+v*A+w*M,t[8]=h*P+l*U+m*V,t[9]=u*P+p*U+g*V,t[10]=c*P+d*U+y*V,t[11]=f*P+v*U+w*V,e!==t&&(t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]))}(t,t,0,[0,0,1]),t}}var f=function(t,e,i,r){return new(i||(i=Promise))((function(s,o){function n(t){try{h(r.next(t))}catch(t){o(t)}}function a(t){try{h(r.throw(t))}catch(t){o(t)}}function h(t){var e;t.done?s(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(n,a)}h((r=r.apply(t,e||[])).next())}))};const l=document.getElementById("gfx-main"),p=new class{constructor(t){this.time=0,this.timeStep=.01,this.render=()=>{this.device.queue.writeBuffer(this.uniformBuffer,0,this.camera.model()),this.device.queue.writeBuffer(this.uniformBuffer,64,this.camera.view()),this.device.queue.writeBuffer(this.uniformBuffer,128,this.camera.project());const t=this.device.createCommandEncoder(),e=this.context.getCurrentTexture().createView(),i=t.beginRenderPass({colorAttachments:[{view:e,clearValue:{r:.5,g:0,b:.25,a:1},loadOp:"clear",storeOp:"store"}]});i.setPipeline(this.pipeline),i.setBindGroup(0,this.bindGroup),i.setVertexBuffer(0,this.mesh.buffer),i.setIndexBuffer(this.mesh.idxBuffer,"uint32"),i.drawIndexed(this.mesh.idxCount,1,0,0),i.end(),this.device.queue.submit([t.finish()]),requestAnimationFrame(this.render),this.time+=this.timeStep},this.canvas=t,this.camera=new c(Math.PI/4,t.width,t.height,.1,10,[-2,0,2],[0,0,0],[0,0,1])}initialize(){return f(this,void 0,void 0,(function*(){yield this.setupDevice(),this.createAssets(),yield this.makePipeline(),this.render()}))}setupDevice(){var t,e;return f(this,void 0,void 0,(function*(){this.adapter=yield null===(t=navigator.gpu)||void 0===t?void 0:t.requestAdapter(),this.device=yield null===(e=this.adapter)||void 0===e?void 0:e.requestDevice(),this.context=this.canvas.getContext("webgpu"),this.format="bgra8unorm",this.context.configure({device:this.device,format:this.format,alphaMode:"opaque"})}))}makePipeline(){return f(this,void 0,void 0,(function*(){this.uniformBuffer=this.device.createBuffer({size:192,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});const e=this.device.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.VERTEX,buffer:{}}]});this.bindGroup=this.device.createBindGroup({layout:e,entries:[{binding:0,resource:{buffer:this.uniformBuffer}}]});const i=this.device.createPipelineLayout({bindGroupLayouts:[e]});this.pipeline=this.device.createRenderPipeline({layout:i,vertex:{module:this.device.createShaderModule({code:t}),entryPoint:"vs_main",buffers:[this.mesh.bufferLayout]},fragment:{module:this.device.createShaderModule({code:t}),entryPoint:"fs_main",targets:[{format:this.format}]},primitive:{topology:"triangle-list"}})}))}createAssets(){this.mesh=new e(this.device)}}(l);p.initialize()})();